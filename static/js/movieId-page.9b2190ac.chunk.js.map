{"version":3,"sources":["services/articles-api.js","components/Movie/movie.module.css","components/Movie/Movie.jsx","pages/MovieId.jsx"],"names":["axios","defaults","baseURL","KEY","fetchMoviesTrending","category","type","time","url","get","then","response","data","results","fetchMovieWithId","id","fetchMovieSearch","search","fetchMovieCast","fetchMovieReviews","module","exports","AsyncCast","lazy","AsyncReviews","selected","color","Movie","handleGoback","props","history","location","state","goBack","push","pathname","this","title","poster_path","popularity","genres","overview","match","className","styles","btn","onClick","src","alt","map","genre","key","name","item","activeStyle","to","from","replace","fallback","path","exact","component","Component","defaultProps","withRouter","MovieId","movie","params","setState"],"mappings":"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","file":"static/js/movieId-page.9b2190ac.chunk.js","sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '?api_key=cff0af22b80c776aec1c17ab43adb9ad';\n\nconst fetchMoviesTrending = (\n  category = 'trending',\n  type = 'movie',\n  time = 'day',\n) => {\n  const url = `${category}/${type}/${time}${KEY}`;\n  return axios.get(url).then(response => response.data.results);\n};\n\nconst fetchMovieWithId = id => {\n  return axios.get(`/movie/${id}${KEY}`).then(response => response.data);\n};\n\nconst fetchMovieSearch = search => {\n  return axios\n    .get(`/search/movie${KEY}&query=${search}`)\n    .then(response => response.data);\n};\n\nconst fetchMovieCast = id => {\n  return axios\n    .get(`/movie/${id}/credits${KEY}`)\n    .then(response => response.data);\n};\n\nconst fetchMovieReviews = id => {\n  return axios\n    .get(`/movie/${id}/reviews${KEY}`)\n    .then(response => response.data);\n};\n\nexport {\n  fetchMoviesTrending,\n  fetchMovieWithId,\n  fetchMovieSearch,\n  fetchMovieCast,\n  fetchMovieReviews,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"movie_item__2b4uF\",\"btn\":\"movie_btn__1RzBm\"};","/* eslint-disable camelcase */\nimport React, { Component, lazy, Suspense } from 'react';\nimport T from 'prop-types';\nimport { NavLink, Route, withRouter, Switch } from 'react-router-dom';\nimport styles from './movie.module.css';\n\nconst AsyncCast = lazy(() =>\n  import('../../pages/Cast/Cast' /* webpackChunkName: \"cast-page\" */),\n);\n\nconst AsyncReviews = lazy(() =>\n  import('../../pages/Reviews' /* webpackChunkName: \"reviews-page\" */),\n);\n\nconst linkPoster = `https://image.tmdb.org/t/p/w300`;\n\nconst selected = {\n  color: 'red',\n};\n\nclass Movie extends Component {\n  static propTypes = {\n    history: T.shape({\n      push: T.func,\n      goBack: T.func.isRequired,\n      replace: T.func.isRequired,\n    }).isRequired,\n    location: T.shape({\n      state: T.shape({}),\n      pathname: T.string,\n    }).isRequired,\n    match: T.shape({\n      params: T.shape({\n        id: T.string,\n      }),\n      url: T.string,\n      path: T.string,\n    }).isRequired,\n    title: T.string,\n    poster_path: T.string,\n    popularity: T.number,\n    // eslint-disable-next-line react/require-default-props\n    genres: T.arrayOf(\n      T.shape({\n        id: T.number,\n        name: T.string,\n      }),\n    ),\n    overview: T.string,\n  };\n\n  static defaultProps = {\n    title: '',\n    poster_path: '',\n    popularity: null,\n    overview: '',\n  };\n\n  handleGoback = () => {\n    const { history, location } = this.props;\n\n    if (location.state) {\n      history.goBack();\n      return;\n    }\n\n    history.push({\n      pathname: '/movies',\n    });\n  };\n\n  render() {\n    const {\n      title,\n      // eslint-disable-next-line camelcase\n      poster_path,\n      popularity,\n      genres,\n      overview,\n      match,\n      location,\n    } = this.props;\n\n    return (\n      <>\n        <article>\n          <button\n            className={styles.btn}\n            type=\"button\"\n            onClick={this.handleGoback}\n          >\n            Go Back\n          </button>\n          <h2>{title} </h2>\n          {poster_path ? (\n            <img src={linkPoster + poster_path} alt={title} />\n          ) : (\n            <></>\n          )}\n          <p>\n            <b>Popularity: {popularity}</b>\n          </p>\n          <p>Overview: {overview}</p>\n          <ul>\n            {genres ? (\n              genres.map(genre => <li key={genre.id}>{genre.name}</li>)\n            ) : (\n              <></>\n            )}\n          </ul>\n          <div>\n            <p>Additional information</p>\n            <ul>\n              <li className={styles.item}>\n                <NavLink\n                  activeStyle={selected}\n                  to={{\n                    pathname: `${match.url}/cast`,\n                    state: { from: location },\n                  }}\n                  replace\n                >\n                  Cast\n                </NavLink>\n              </li>\n              <li className={styles.item}>\n                <NavLink\n                  activeStyle={selected}\n                  to={{\n                    pathname: `${match.url}/reviews`,\n                    state: { from: location },\n                  }}\n                  replace\n                >\n                  Revievs\n                </NavLink>\n              </li>\n            </ul>\n          </div>\n        </article>\n        <Suspense fallback={<h2>Loading...</h2>}>\n          <Switch>\n            <Route path=\"/movies/:id/cast\" exact component={AsyncCast} />\n            <Route path=\"/movies/:id/reviews\" exact component={AsyncReviews} />\n          </Switch>\n        </Suspense>\n      </>\n    );\n  }\n}\n\nexport default withRouter(Movie);\n","import React, { Component } from 'react';\nimport Movie from '../components/Movie/Movie';\nimport { fetchMovieWithId } from '../services/articles-api';\n\nconst getIdFromProps = props => props.match.params.id;\n\nexport default class MovieId extends Component {\n  state = {\n    movie: null,\n  };\n\n  componentDidMount() {\n    const id = getIdFromProps(this.props);\n    fetchMovieWithId(id).then(movie => this.setState({ movie }));\n  }\n\n  render() {\n    const { movie } = this.state;\n\n    return (\n      <div>\n        <Movie {...movie} />\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}